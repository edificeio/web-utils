plugins {
  id 'java'
  id 'maven'
  id 'maven-publish'
}

if (!hasProperty('odeUsername')) {
  ext.odeUsername = ''
}
if (!hasProperty('odePassword')) {
  ext.odePassword = ''
}

repositories {
  mavenLocal()
    maven {
      url "https://maven.opendigitaleducation.com/nexus/content/groups/public"
    }
  mavenCentral()
    maven {
      url "https://oss.sonatype.org/content/repositories/iovertx-3720/"
    }
    maven {
      url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

configurations {
  provided
}

sourceSets {
  main { compileClasspath += configurations.provided }
}

configurations.all {
  resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

task generateCommitId {
  doLast {
    def commitId = 'unknown'
    def stdout = new ByteArrayOutputStream()
    try {
      def result = exec {
        commandLine 'git', 'rev-parse', 'HEAD'
        standardOutput = stdout
      }
      commitId = stdout.toString().trim()
    } catch (Exception e) {
      e.printStackTrace()
      commitId = 'error'
    }
    project.ext.set('commitId', commitId)
    def branch = 'unknown'
    try {
      def stdoutBranch = new ByteArrayOutputStream()
      def resultBranch = exec {
        commandLine 'git', 'rev-parse', '--abbrev-ref', 'HEAD'
        standardOutput = stdoutBranch
      }
      branch = stdoutBranch.toString().trim()
    } catch (Exception e) {
      e.printStackTrace()
      branch = 'error'
    }
    project.ext.set('branchName', branch)
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    project.ext.set('buildTime', formattedDate)
  }
}
compileJava {
  sourceCompatibility = project.sourceCompatibility
    targetCompatibility = project.targetCompatibility
  dependsOn generateCommitId
}

compileTestJava {
  sourceCompatibility = project.sourceCompatibility
    targetCompatibility = project.targetCompatibility
}

dependencies {
  compileOnly "io.vertx:vertx-core:$vertxVersion"
  compile "io.vertx:vertx-mail-client:$vertxVersion"
  compile "com.samskivert:jmustache:$mustacheVersion"
  compile "joda-time:joda-time:$jodaTimeVersion"
  compile "io.edifice:xss-utils:$xssUtilsVersion"
  compile "fr.wseduc:eventbus-wrapper:$eventbusWrapperVersion"
  testCompile "io.vertx:vertx-unit:$vertxVersion"
  testCompile "junit:junit:$junitVersion"
  testCompile "commons-codec:commons-codec:$commonsCodecVersion"
  testCompile "com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:$javaHtmlSanitizerVersion"
  provided "io.vertx:vertx-micrometer-metrics:$vertxVersion"
  provided "io.micrometer:micrometer-registry-prometheus:$micrometerPrometheusVersion"
}


jar {
  manifest {
    attributes(
            "Main-Verticle": "service:mod",
            "SCM-Commit-Id": "${-> project.ext.commitId}",
            "SCM-Branch": "${-> project.ext.branchName}",
            "Build-Time": "${-> project.ext.buildTime}"
    )
  }
}


install {
  repositories.mavenInstaller {
    pom.version = "$version"
    pom.artifactId = 'web-utils'
    pom.groupId = 'fr.wseduc'
  }
}

publishing {
  repositories {
    if (version.endsWith("SNAPSHOT")) {
      maven {
        name 'Snapshots'
          url 'https://maven.opendigitaleducation.com/nexus/content/repositories/snapshots/'
          credentials {
            username "${odeUsername}"
              password "${odePassword}"
          }
      }
    } else {
      maven {
        name 'Releases'
          url 'https://maven.opendigitaleducation.com/nexus/content/repositories/releases/'
          credentials {
            username "${odeUsername}"
              password "${odePassword}"
          }
      }
    }
  }
  publications {
    mavenJava(MavenPublication) {
      from components.java
      groupId "${modowner}"
      artifactId "${modname}"
    }
  }
}

def configurePom(def pom) {
  pom.project {
    name 'web-utils'
    description 'Vert.x web utils framework'
    inceptionYear '2013'
    packaging 'jar'
    url 'https://github.com/web-education/web-utils'

    developers {
      developer {
        id 'rafik.djedjig'
        name 'Rafik Djedjig'
        email 'rafik.djedjig@web-education.net'
      }
      developer {
        id 'dboissin'
        name 'Damien BOISSIN'
        email 'damien.boissin@web-education.net'
      }
    }

    scm {
      connection 'scm:git:ssh://git@github.com:web-education/web-utils.git'
      developerConnection 'scm:git:ssh://git@github.com:web-education/web-utils.git'
      url 'https://github.com/web-education/web-utils.git'
    }

    licenses {
      license {
        name 'The Apache Software License, Version 2.0'
        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
        distribution 'repo'
      }
    }

    properties {
      setProperty('project.build.sourceEncoding', 'UTF8')
    }
  }
}
